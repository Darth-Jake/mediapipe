input_side_packet: "yamnet_model_path"
input_side_packet: "input_audio_wav_path"
output_stream: "audio_class"

node {
  calculator: "AudioDecoderCalculator"
  input_side_packet: "INPUT_FILE_PATH:input_audio_wav_path"
  output_stream: "AUDIO:audio"
  output_stream: "AUDIO_HEADER:audio_header"
  node_options: {
    [type.googleapis.com/mediapipe.AudioDecoderOptions] {
      audio_stream { 
        stream_index: 0 
      }
      start_time: 0
      end_time: 2
    }
  }
}

node {
  calculator: "AddHeaderCalculator"
  input_stream: "DATA:audio"
  input_stream: "HEADER:audio_header"
  output_stream: "media_audio"
}

# Always convert the audio to mono.
node {
  calculator: "AverageTimeSeriesAcrossChannelsCalculator"
  input_stream: "media_audio"
  output_stream: "mono_waveform"
}

node {
  calculator: "RationalFactorResampleCalculator"
  input_stream: "mono_waveform"
  output_stream: "resampled_waveform"
  node_options: {
    [type.googleapis.com/mediapipe.RationalFactorResampleCalculatorOptions] {
      target_sample_rate: 16000.0
    }
  }
}

node {
  calculator: "TimeSeriesFramerCalculator"
  input_stream: "resampled_waveform"
  output_stream: "framed_audio"
  node_options: {
    [type.googleapis.com/mediapipe.TimeSeriesFramerCalculatorOptions] {
      frame_duration_seconds: 0.975
      frame_overlap_seconds: 0.487
    }
  }
}

node {
  calculator: "TfliteTaskAudioClassifierCalculator"
  input_stream: "DATA:framed_audio"
  input_side_packet: "MODEL_PATH:yamnet_model_path"
  output_stream: "CLASS:audio_class"
}